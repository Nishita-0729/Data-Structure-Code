class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int left=0;
        int right=0;
        for(int num:weights){
            right+=num;
            left=Math.max(left,num);
        }

        int ans=right;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(canShip(weights,mid,days)){
                ans=mid;
                right=mid-1;
            }
            else{
                left=mid+1;
            }
        }
        return ans;
    }
    private static boolean canShip(int[] weights,int capacity, int days){
        int dayUsed=1;
        int currLoad=0;
        for(int w : weights){
            if(currLoad+w>capacity){
                dayUsed++;
                currLoad=0;
            }
            currLoad+=w;
            if(dayUsed>days) return false;
        }
        return true;
    }
}
